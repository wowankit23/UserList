// Generated by Dagger (https://dagger.dev).
package com.test.mobileprogarmming.data.local;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppDatabase_Callback_Factory implements Factory<AppDatabase.Callback> {
  private final Provider<CoroutineScope> applicationScopeProvider;

  public AppDatabase_Callback_Factory(Provider<CoroutineScope> applicationScopeProvider) {
    this.applicationScopeProvider = applicationScopeProvider;
  }

  @Override
  public AppDatabase.Callback get() {
    return newInstance(applicationScopeProvider.get());
  }

  public static AppDatabase_Callback_Factory create(
      Provider<CoroutineScope> applicationScopeProvider) {
    return new AppDatabase_Callback_Factory(applicationScopeProvider);
  }

  public static AppDatabase.Callback newInstance(CoroutineScope applicationScope) {
    return new AppDatabase.Callback(applicationScope);
  }
}
