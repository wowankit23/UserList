// Generated by Dagger (https://dagger.dev).
package com.test.mobileprogarmming.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesLogginInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  @Override
  public HttpLoggingInterceptor get() {
    return providesLogginInterceptor();
  }

  public static NetworkModule_ProvidesLogginInterceptorFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static HttpLoggingInterceptor providesLogginInterceptor() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providesLogginInterceptor());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvidesLogginInterceptorFactory INSTANCE = new NetworkModule_ProvidesLogginInterceptorFactory();
  }
}
